import React from 'react';
import { Artifact } from '../types';
import './Achievements.css';

interface Achievement {
  id: number;
  title: string;
  description: string;
  icon: string;
  unlocked: boolean;
  unlockedAt?: string;
  rarity: 'common' | 'rare' | 'epic' | 'legendary';
}

interface AchievementsProps {
  artifacts: Artifact[];
  className?: string;
}

const Achievements: React.FC<AchievementsProps> = ({ artifacts, className = '' }) => {
  // –ú–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–π
  const achievements: Achievement[] = [
    {
      id: 1,
      title: '–ü–µ—Ä–≤—ã–µ —à–∞–≥–∏',
      description: '–ó–∞–≤–µ—Ä—à–∏—Ç–µ –ø–µ—Ä–≤—É—é –º–∏—Å—Å–∏—é',
      icon: 'üéØ',
      unlocked: true,
      unlockedAt: '2024-01-15',
      rarity: 'common'
    },
    {
      id: 2,
      title: '–ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å',
      description: '–î–æ—Å—Ç–∏–≥–Ω–∏—Ç–µ —Ä–∞–Ω–≥–∞ "–ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å"',
      icon: '‚≠ê',
      unlocked: true,
      unlockedAt: '2024-01-19',
      rarity: 'rare'
    },
    {
      id: 3,
      title: '–ö–æ–ª–ª–µ–∫—Ü–∏–æ–Ω–µ—Ä',
      description: '–ü–æ–ª—É—á–∏—Ç–µ 3 –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–∞',
      icon: 'üèÜ',
      unlocked: artifacts.length >= 3,
      rarity: 'epic'
    },
    {
      id: 4,
      title: '–ú–∞—Å—Ç–µ—Ä –Ω–∞–≤—ã–∫–æ–≤',
      description: '–ú–∞–∫—Å–∏–º–∏–∑–∏—Ä—É–π—Ç–µ 2 –∫–æ–º–ø–µ—Ç–µ–Ω—Ü–∏–∏',
      icon: 'üìà',
      unlocked: false,
      rarity: 'legendary'
    },
    {
      id: 5,
      title: '–õ–µ–≥–µ–Ω–¥–∞',
      description: '–î–æ—Å—Ç–∏–≥–Ω–∏—Ç–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–≥–æ —Ä–∞–Ω–≥–∞',
      icon: 'üëë',
      unlocked: false,
      rarity: 'legendary'
    },
    {
      id: 6,
      title: '–ù–µ—É—Ç–æ–º–∏–º—ã–π',
      description: '–ó–∞–≤–µ—Ä—à–∏—Ç–µ 10 –º–∏—Å—Å–∏–π',
      icon: 'üí™',
      unlocked: false,
      rarity: 'epic'
    }
  ];

  const getRarityColor = (rarity: string) => {
    switch (rarity) {
      case 'common': return '#b8c5d1';
      case 'rare': return '#4ecdc4';
      case 'epic': return '#9b59b6';
      case 'legendary': return '#f39c12';
      default: return '#b8c5d1';
    }
  };

  const getRarityBorder = (rarity: string) => {
    switch (rarity) {
      case 'common': return '1px solid rgba(184, 197, 209, 0.3)';
      case 'rare': return '1px solid rgba(78, 205, 196, 0.5)';
      case 'epic': return '1px solid rgba(155, 89, 182, 0.5)';
      case 'legendary': return '2px solid rgba(243, 156, 18, 0.7)';
      default: return '1px solid rgba(184, 197, 209, 0.3)';
    }
  };

  return (
    <div className={`achievements ${className}`}>
      <div className="achievements-header">
        <h3>üèÜ –î–æ—Å—Ç–∏–∂–µ–Ω–∏—è</h3>
        <div className="achievements-progress">
          {achievements.filter(a => a.unlocked).length} / {achievements.length}
        </div>
      </div>
      
      <div className="achievements-grid">
        {achievements.map(achievement => (
          <div 
            key={achievement.id} 
            className={`achievement-item ${achievement.unlocked ? 'unlocked' : 'locked'}`}
            style={{
              border: getRarityBorder(achievement.rarity),
              color: getRarityColor(achievement.rarity)
            }}
          >
            <div className="achievement-icon">
              {achievement.unlocked ? achievement.icon : 'üîí'}
            </div>
            <div className="achievement-content">
              <div className="achievement-title">{achievement.title}</div>
              <div className="achievement-description">{achievement.description}</div>
              {achievement.unlocked && achievement.unlockedAt && (
                <div className="achievement-date">
                  –ü–æ–ª—É—á–µ–Ω–æ: {new Date(achievement.unlockedAt).toLocaleDateString('ru-RU')}
                </div>
              )}
            </div>
            <div className="achievement-rarity">
              {achievement.rarity.toUpperCase()}
            </div>
          </div>
        ))}
      </div>
    </div>
  );
};

export default Achievements;
