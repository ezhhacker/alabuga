import React, { useState } from 'react';
import { ThemeEntity, ThemeForm, Mission, HRUser } from '../types';
import { useAppContext } from '../context/AppContext';
import './AdminPage.css';

const AdminPage: React.FC = () => {
  const { user } = useAppContext();
  
  // –í—Å–µ —Ö—É–∫–∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤—ã–∑–≤–∞–Ω—ã –¥–æ –ª—é–±—ã—Ö —É—Å–ª–æ–≤–∏–π
  const [activeTab, setActiveTab] = useState<'themes' | 'missions' | 'users'>('themes');
  const [isCreatingTheme, setIsCreatingTheme] = useState(false);
  const [editingTheme, setEditingTheme] = useState<ThemeEntity | null>(null);
  const [isCreatingMission, setIsCreatingMission] = useState(false);
  const [editingMission, setEditingMission] = useState<Mission | null>(null);
  
  // –ú–æ–∫–æ–≤—ã–µ —Ç–µ–º—ã
  const [themes, setThemes] = useState<ThemeEntity[]>([
    {
      id: 'space',
      name: 'space',
      displayName: '–ö–æ—Å–º–∏—á–µ—Å–∫–∞—è –û–¥–∏—Å—Å–µ—è',
      description: '–ò—Å—Å–ª–µ–¥—É–π—Ç–µ –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–µ –ø—Ä–æ—Å—Ç–æ—Ä—ã –≤—Å–µ–ª–µ–Ω–Ω–æ–π',
      category: 'space',
      isActive: true,
      isDefault: true,
      isCustom: false,
      userCategories: ['all'],
      createdBy: 1,
      createdAt: '2024-01-01T00:00:00Z',
      updatedAt: '2024-01-01T00:00:00Z',
      colors: {
        primary: '#4ecdc4',
        secondary: '#667eea',
        accent: '#ffd700',
        background: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
        surface: 'rgba(255, 255, 255, 0.1)',
        text: '#ffffff',
        textSecondary: '#b8c5d1',
        border: 'rgba(255, 255, 255, 0.2)',
        success: '#4ecdc4',
        warning: '#ffd700',
        error: '#ff6b6b',
        info: '#4ecdc4'
      },
      gradients: {
        main: 'linear-gradient(135deg, #667eea 0%, #764ba2 100%)',
        card: 'linear-gradient(145deg, rgba(255, 255, 255, 0.1), rgba(255, 255, 255, 0.05))',
        button: 'linear-gradient(45deg, #4ecdc4, #44a08d)',
        header: 'linear-gradient(90deg, rgba(102, 126, 234, 0.8), rgba(118, 75, 162, 0.8))'
      },
      effects: {
        blur: 'blur(10px)',
        shadow: '0 8px 32px rgba(0, 0, 0, 0.3)',
        glow: '0 0 20px rgba(78, 205, 196, 0.3)'
      },
      icons: {
        primary: 'üöÄ',
        secondary: '‚≠ê',
        accent: 'üåü'
      }
    }
  ]);

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å HR
  if (!user || user.role !== 'hr') {
    return (
      <div className="access-denied">
        <h2>–î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω</h2>
        <p>–≠—Ç–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ —Ç–æ–ª—å–∫–æ HR –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.</p>
        <button onClick={() => window.history.back()}>
          –ù–∞–∑–∞–¥
        </button>
      </div>
    );
  }

  // –ú–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è HR –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  const currentHR: HRUser = {
    id: 1,
    name: '–ê–Ω–Ω–∞ –ü–µ—Ç—Ä–æ–≤–∞',
    email: 'anna.petrova@company.com',
    role: 'hr',
    permissions: ['manage_themes', 'manage_missions', 'view_users'],
    created_at: '2024-01-01T00:00:00Z',
    last_login: '2024-01-20T10:30:00Z'
  };

  const handleCreateTheme = () => {
    setIsCreatingTheme(true);
  };

  const handleEditTheme = (theme: ThemeEntity) => {
    setEditingTheme(theme);
  };

  const handleDeleteTheme = (themeId: string) => {
    if (window.confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç—É —Ç–µ–º—É?')) {
      setThemes(themes.filter(theme => theme.id !== themeId));
    }
  };

  const handleActivateTheme = (themeId: string) => {
    setThemes(themes.map(theme => ({
      ...theme,
      isActive: theme.id === themeId
    })));
  };

  return (
    <div className="admin-page">
      <div className="admin-header">
        <h1>üéõÔ∏è –ü–∞–Ω–µ–ª—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞</h1>
        <div className="admin-user">
          <span className="user-avatar">üë©‚Äçüíº</span>
          <div className="user-info">
            <div className="user-name">{currentHR.name}</div>
            <div className="user-role">{currentHR.role.toUpperCase()}</div>
          </div>
        </div>
      </div>

      <div className="admin-tabs">
        <button 
          className={`tab-button ${activeTab === 'themes' ? 'active' : ''}`}
          onClick={() => setActiveTab('themes')}
        >
          üé® –¢–µ–º—ã
        </button>
        <button 
          className={`tab-button ${activeTab === 'missions' ? 'active' : ''}`}
          onClick={() => setActiveTab('missions')}
        >
          üéØ –ú–∏—Å—Å–∏–∏
        </button>
        <button 
          className={`tab-button ${activeTab === 'users' ? 'active' : ''}`}
          onClick={() => setActiveTab('users')}
        >
          üë• –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏
        </button>
      </div>

      <div className="admin-content">
        {activeTab === 'themes' && (
          <div className="themes-section">
            <div className="section-header">
              <h2>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–º–∞–º–∏</h2>
              <button className="create-button" onClick={handleCreateTheme}>
                ‚ûï –°–æ–∑–¥–∞—Ç—å —Ç–µ–º—É
              </button>
            </div>

            <div className="themes-grid">
              {themes.map(theme => (
                <div key={theme.id} className={`theme-card ${theme.isActive ? 'active' : ''}`}>
                  <div className="theme-preview" style={{ background: theme.gradients.main }}>
                    <span className="theme-icon">{theme.icons.primary}</span>
                  </div>
                  
                  <div className="theme-info">
                    <h3>{theme.displayName}</h3>
                    <p>{theme.description}</p>
                    <div className="theme-meta">
                      <span className="category-badge">{theme.category}</span>
                      {theme.isDefault && <span className="default-badge">–ü–æ —É–º–æ–ª—á–∞–Ω–∏—é</span>}
                      {theme.isCustom && <span className="custom-badge">–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∞—è</span>}
                    </div>
                    <div className="theme-categories">
                      –ö–∞—Ç–µ–≥–æ—Ä–∏–∏: {theme.userCategories.join(', ')}
                    </div>
                  </div>

                  <div className="theme-actions">
                    <button 
                      className={`action-button ${theme.isActive ? 'active' : ''}`}
                      onClick={() => handleActivateTheme(theme.id)}
                    >
                      {theme.isActive ? '‚úÖ –ê–∫—Ç–∏–≤–Ω–∞' : 'üîò –ê–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å'}
                    </button>
                    <button 
                      className="action-button edit"
                      onClick={() => handleEditTheme(theme)}
                    >
                      ‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å
                    </button>
                    {!theme.isDefault && (
                      <button 
                        className="action-button delete"
                        onClick={() => handleDeleteTheme(theme.id)}
                      >
                        üóëÔ∏è –£–¥–∞–ª–∏—Ç—å
                      </button>
                    )}
                  </div>
                </div>
              ))}
            </div>
          </div>
        )}

        {activeTab === 'missions' && (
          <div className="missions-section">
            <div className="section-header">
              <h2>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –º–∏—Å—Å–∏—è–º–∏</h2>
              <button 
                className="create-button"
                onClick={() => setIsCreatingMission(true)}
              >
                ‚ûï –°–æ–∑–¥–∞—Ç—å –º–∏—Å—Å–∏—é
              </button>
            </div>
            
            <div className="missions-list">
              <div className="mission-card">
                <div className="mission-info">
                  <h3>–ü–µ—Ä–≤—ã–µ —à–∞–≥–∏</h3>
                  <p>–°–æ–∑–¥–∞–π—Ç–µ —Å–≤–æ–π –ø–µ—Ä–≤—ã–π –ø—Ä–æ–µ–∫—Ç</p>
                  <div className="mission-details">
                    <span>–û–ø—ã—Ç: +50</span>
                    <span>–ú–∞–Ω–∞: +25</span>
                    <span>–ö–∞—Ç–µ–≥–æ—Ä–∏—è: –û–±—É—á–µ–Ω–∏–µ</span>
                  </div>
                </div>
                <div className="mission-actions">
                  <button className="action-button edit">‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å</button>
                  <button className="action-button delete">üóëÔ∏è –£–¥–∞–ª–∏—Ç—å</button>
                </div>
              </div>
            </div>
          </div>
        )}

        {activeTab === 'users' && (
          <div className="users-section">
            <div className="section-header">
              <h2>–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏</h2>
            </div>
            
            <div className="users-list">
              <p>–ó–¥–µ—Å—å –±—É–¥–µ—Ç —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è...</p>
            </div>
          </div>
        )}
      </div>

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å–æ–∑–¥–∞–Ω–∏—è/—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–º—ã */}
      {(isCreatingTheme || editingTheme) && (
        <div className="modal-overlay">
          <div className="modal-content">
            <div className="modal-header">
              <h3>{editingTheme ? '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–º—É' : '–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é —Ç–µ–º—É'}</h3>
              <button 
                className="close-button"
                onClick={() => {
                  setIsCreatingTheme(false);
                  setEditingTheme(null);
                }}
              >
                ‚úï
              </button>
            </div>
            
            <div className="modal-body">
              <p>–ó–¥–µ—Å—å –±—É–¥–µ—Ç —Ñ–æ—Ä–º–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è/—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–º—ã...</p>
              <p>–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª –±—É–¥–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω –≤ —Å–ª–µ–¥—É—é—â–∏—Ö –∏—Ç–µ—Ä–∞—Ü–∏—è—Ö.</p>
            </div>
          </div>
        </div>
      )}

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å–æ–∑–¥–∞–Ω–∏—è/—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –º–∏—Å—Å–∏–∏ */}
      {(isCreatingMission || editingMission) && (
        <div className="modal-overlay">
          <div className="modal-content">
            <div className="modal-header">
              <h3>{editingMission ? '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –º–∏—Å—Å–∏—é' : '–°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—É—é –º–∏—Å—Å–∏—é'}</h3>
              <button 
                className="close-button"
                onClick={() => {
                  setIsCreatingMission(false);
                  setEditingMission(null);
                }}
              >
                ‚úï
              </button>
            </div>
            
            <div className="modal-body">
              <form className="mission-form">
                <div className="form-group">
                  <label>–ù–∞–∑–≤–∞–Ω–∏–µ –º–∏—Å—Å–∏–∏</label>
                  <input 
                    type="text" 
                    placeholder="–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –º–∏—Å—Å–∏–∏"
                    defaultValue={editingMission?.title || ''}
                  />
                </div>
                
                <div className="form-group">
                  <label>–û–ø–∏—Å–∞–Ω–∏–µ</label>
                  <textarea 
                    placeholder="–û–ø–∏—Å–∞–Ω–∏–µ –º–∏—Å—Å–∏–∏"
                    defaultValue={editingMission?.description || ''}
                  />
                </div>
                
                <div className="form-row">
                  <div className="form-group">
                    <label>–û–ø—ã—Ç</label>
                    <input 
                      type="number" 
                      placeholder="50"
                      defaultValue={editingMission?.experience_reward || ''}
                    />
                  </div>
                  
                  <div className="form-group">
                    <label>–ú–∞–Ω–∞</label>
                    <input 
                      type="number" 
                      placeholder="25"
                      defaultValue={editingMission?.mana_reward || ''}
                    />
                  </div>
                </div>
                
                <div className="form-row">
                  <div className="form-group">
                    <label>–ö–∞—Ç–µ–≥–æ—Ä–∏—è</label>
                    <select defaultValue={editingMission?.category || ''}>
                      <option value="">–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é</option>
                      <option value="–û–±—É—á–µ–Ω–∏–µ">–û–±—É—á–µ–Ω–∏–µ</option>
                      <option value="Frontend">Frontend</option>
                      <option value="Backend">Backend</option>
                      <option value="DevOps">DevOps</option>
                    </select>
                  </div>
                  
                  <div className="form-group">
                    <label>–í–µ—Ç–∫–∞</label>
                    <input 
                      type="text" 
                      placeholder="React"
                      defaultValue={editingMission?.branch || ''}
                    />
                  </div>
                </div>
                
                <div className="form-actions">
                  <button type="button" className="cancel-button">
                    –û—Ç–º–µ–Ω–∞
                  </button>
                  <button type="submit" className="save-button">
                    {editingMission ? '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è' : '–°–æ–∑–¥–∞—Ç—å –º–∏—Å—Å–∏—é'}
                  </button>
                </div>
              </form>
            </div>
          </div>
        </div>
      )}
    </div>
  );
};

export default AdminPage;
